{
  "version": 3,
  "sources": ["../../recorder-core/src/engine/beta-amr.js"],
  "sourcesContent": ["/*\namr编码器，beta版，需带上src/engine/amr-engine.js引擎使用。如果需要播放amr音频，需要额外带上wav.js引擎来调用Recorder.amr2wav把amr转成wav播放\nhttps://github.com/xiangyuecn/Recorder\n\n当然最佳推荐使用mp3、wav格式，代码也是优先照顾这两种格式\n浏览器支持情况\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\n\nFFmpeg转码：\n[ wav->AMR-NB] ffmpeg.exe -i test.wav -ar 8000 -ab 6.7k -ac 1 amr-6.7.amr\n[ wav->AMR-NB] ffmpeg.exe -i test.wav -ar 8000 -ab 12.2k -ac 1 amr-12.2.amr\n[ wav->AMR-WB] ffmpeg.exe -i test.wav -acodec libvo_amrwbenc -ar 16000 -ab 23.85k -ac 1 amr-23.85.amr\n*/\n(function(factory){\n\tvar browser=typeof window==\"object\" && !!window.document;\n\tvar win=browser?window:Object; //非浏览器环境，Recorder挂载在Object下面\n\tvar rec=win.Recorder,ni=rec.i18n;\n\tfactory(rec,ni,ni.$T,browser);\n}(function(Recorder,i18n,$T,isBrowser){\n\"use strict\";\n\nvar BitS=\"4.75, 5.15, 5.9, 6.7, 7.4, 7.95, 10.2, 12.2\";\nRecorder.prototype.enc_amr={\n\tstable:true,takeEC:\"full\"\n\t,getTestMsg:function(){\n\t\treturn $T(\"b2mN::AMR-NB(NarrowBand)，采样率设置无效（只提供8000hz），比特率范围：{1}（默认12.2kbps），一帧20ms、{2}字节；浏览器一般不支持播放amr格式，可用Recorder.amr2wav()转码成wav播放\",0,BitS,\"Math.ceil(bitRate/8*20)+1\");\n\t}\n};\n\nvar NormalizeSet=function(set){\n\tvar bS=set.bitRate,b=Recorder.AMR.BitRate(bS);\n\tvar sS=set.sampleRate,s=8000;\n\tif(bS!=b || sS!=s) Recorder.CLog($T(\"tQBv::AMR Info: 和设置的不匹配{1}，已更新成{2}\",0,\"set:\"+bS+\"kbps \"+sS+\"hz\",\"set:\"+b+\"kbps \"+s+\"hz\"),3);\n\tset.bitRate=b;\n\tset.sampleRate=s;\n};\nvar ImportEngineErr=function(){\n\treturn $T.G(\"NeedImport-2\",[\"beta-amr.js\",\"src/engine/beta-amr-engine.js\"]);\n};\n//是否支持web worker\nvar HasWebWorker=isBrowser && typeof Worker==\"function\";\n\n\n/**amr转码成wav，可以直接用来播放；需同时引入src/engine/wav.js\namrBlob: amr音频文件blob对象 或 ArrayBuffer（回调也将返回ArrayBuffer）\nTrue(wavBlob,duration,mime)\nFalse(msg)\n**/\nRecorder.amr2wav=function(amrBlob,True,False){\n\tif(!Recorder.AMR){\n\t\tFalse(ImportEngineErr()); return;\n\t};\n\tif(!Recorder.prototype.wav){\n\t\tFalse($T.G(\"NeedImport-2\",[\"amr2wav\",\"src/engine/wav.js\"]));\n\t\treturn;\n\t};\n\t\n\tvar loadOk=function(arrB,dArrB){\n\t\tvar amr=new Uint8Array(arrB);\n\t\tRecorder.AMR.decode(amr,function(pcm){\n\t\t\tvar rec=Recorder({type:\"wav\"});\n\t\t\tif(dArrB)rec.dataType=\"arraybuffer\";\n\t\t\trec.mock(pcm,8000).stop(function(wavBlob,duration,mime){\n\t\t\t\tTrue(wavBlob,duration,mime);\n\t\t\t},False);\n\t\t},False);\n\t};\n\t\n\tif(amrBlob instanceof ArrayBuffer){\n\t\tloadOk(amrBlob,1);\n\t}else{\n\t\tvar reader=new FileReader();\n\t\treader.onloadend=function(){\n\t\t\tloadOk(reader.result);\n\t\t};\n\t\treader.readAsArrayBuffer(amrBlob);\n\t};\n};\n\n\n//*******标准UI线程转码支持函数************\n\nRecorder.prototype.amr=function(res,True,False){\n\t\tvar This=this,set=This.set,srcSampleRate=set.sampleRate,sampleRate=8000;\n\t\tif(!Recorder.AMR){\n\t\t\tFalse(ImportEngineErr()); return;\n\t\t};\n\t\t\n\t\t//必须先处理好采样率\n\t\tNormalizeSet(set);\n\t\tif(srcSampleRate>sampleRate){\n\t\t\tres=Recorder.SampleData([res],srcSampleRate,sampleRate).data;\n\t\t}else if(srcSampleRate<sampleRate){\n\t\t\tFalse($T(\"q12D::数据采样率低于{1}\",0,sampleRate)); return;\n\t\t};\n\t\t\n\t\t//优先采用worker编码，非worker时用老方法提供兼容\n\t\tif(HasWebWorker){\n\t\t\tvar ctx=This.amr_start(set);\n\t\t\tif(ctx){\n\t\t\t\tif(ctx.isW){\n\t\t\t\t\tThis.amr_encode(ctx,res);\n\t\t\t\t\tThis.amr_complete(ctx,True,False,1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tThis.amr_stop(ctx);\n\t\t\t};\n\t\t};\n\t\t\n\t\tRecorder.AMR.encode(res,function(data){\n\t\t\tTrue(data.buffer,\"audio/amr\");\n\t\t},False,set.bitRate);\n\t};\n\n\n//********边录边转码(Worker)支持函数，如果提供就代表可能支持，否则只支持标准转码*********\n\n//全局共享一个Worker，后台串行执行\nvar amrWorker;\nRecorder.BindDestroy(\"amrWorker\",function(){\n\tif(amrWorker){\n\t\tRecorder.CLog(\"amrWorker Destroy\");\n\t\tamrWorker.terminate();\n\t\tamrWorker=null;\n\t};\n});\n\n\nRecorder.prototype.amr_envCheck=function(envInfo,set){//检查环境下配置是否可用\n\tvar errMsg=\"\";\n\t//需要实时编码返回数据，此时需要检查是否可实时编码\n\tif(set.takeoffEncodeChunk){\n\t\tif(!newContext()){//浏览器不能创建实时编码环境\n\t\t\terrMsg=$T(\"TxjV::当前浏览器版本太低，无法实时处理\");\n\t\t};\n\t};\n\tif(!errMsg && !Recorder.AMR){\n\t\terrMsg=ImportEngineErr();\n\t};\n\treturn errMsg;\n};\nRecorder.prototype.amr_start=function(set){//如果返回null代表不支持\n\treturn newContext(set);\n};\nvar openList={id:0};\nvar newContext=function(setOrNull,_badW){\n\t//独立运行的函数，scope.wkScope worker.onmessage 字符串会被替换\n\tvar run=function(e){\n\t\tvar ed=e.data;\n\t\tvar wk_ctxs=scope.wkScope.wk_ctxs;\n\t\tvar wk_AMR=scope.wkScope.wk_AMR;\n\t\t\n\t\tvar cur=wk_ctxs[ed.id];\n\t\tif(ed.action==\"init\"){\n\t\t\twk_ctxs[ed.id]={\n\t\t\t\ttakeoff:ed.takeoff\n\t\t\t\t\n\t\t\t\t,pcmSize:0\n\t\t\t\t,memory:new Uint8Array(500000), mOffset:0\n\t\t\t\t,encObj:wk_AMR.GetEncoder(ed.bitRate)\n\t\t\t};\n\t\t}else if(!cur){\n\t\t\treturn;\n\t\t};\n\t\tvar addBytes=function(buf){\n\t\t\tvar bufLen=buf.length;\n\t\t\tif(cur.mOffset+bufLen>cur.memory.length){\n\t\t\t\tvar tmp=new Uint8Array(cur.memory.length+Math.max(500000,bufLen));\n\t\t\t\ttmp.set(cur.memory.subarray(0, cur.mOffset));\n\t\t\t\tcur.memory=tmp;\n\t\t\t}\n\t\t\tcur.memory.set(buf,cur.mOffset);\n\t\t\tcur.mOffset+=bufLen;\n\t\t};\n\t\t\n\t\tswitch(ed.action){\n\t\tcase \"stop\":\n\t\t\tcur.encObj=null;\n\t\t\tdelete wk_ctxs[ed.id];\n\t\t\tbreak;\n\t\tcase \"encode\":\n\t\t\tcur.pcmSize+=ed.pcm.length;\n\t\t\ttry{\n\t\t\t\tvar buf=cur.encObj.encode(ed.pcm);\n\t\t\t}catch(e){ //精简代码调用了abort\n\t\t\t\tcur.err=e;\n\t\t\t\tconsole.error(e);\n\t\t\t\tbreak;\n\t\t\t};\n\t\t\tif(!cur._h){//添加AMR头\n\t\t\t\tcur._h=1;\n\t\t\t\tvar head=wk_AMR.GetHeader();\n\t\t\t\tvar buf2=new Uint8Array(head.length+buf.length);\n\t\t\t\tbuf2.set(head);\n\t\t\t\tbuf2.set(buf,head.length);\n\t\t\t\tbuf=buf2;\n\t\t\t}\n\t\t\tif(buf.length>0){\n\t\t\t\tif(cur.takeoff){\n\t\t\t\t\tworker.onmessage({action:\"takeoff\",id:ed.id,chunk:buf});\n\t\t\t\t}else{\n\t\t\t\t\taddBytes(buf);\n\t\t\t\t};\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"complete\":\n\t\t\ttry{\n\t\t\t\tvar buf=cur.encObj.flush();\n\t\t\t}catch(e){ //精简代码调用了abort\n\t\t\t\tcur.err=e;\n\t\t\t\tconsole.error(e);\n\t\t\t};\n\t\t\tif(buf && buf.length>0){\n\t\t\t\tif(cur.takeoff){\n\t\t\t\t\tworker.onmessage({action:\"takeoff\",id:ed.id,chunk:buf});\n\t\t\t\t}else{\n\t\t\t\t\taddBytes(buf);\n\t\t\t\t};\n\t\t\t};\n\t\t\tif(cur.err){\n\t\t\t\tworker.onmessage({action:ed.action,id:ed.id\n\t\t\t\t\t,err:\"AMR Encoder: \"+cur.err.message});\n\t\t\t\tbreak;\n\t\t\t};\n\t\t\t\n\t\t\tworker.onmessage({\n\t\t\t\taction:ed.action\n\t\t\t\t,id:ed.id\n\t\t\t\t,blob:cur.memory.buffer.slice(0,cur.mOffset)\n\t\t\t});\n\t\t\tbreak;\n\t\t};\n\t};\n\t\n\tvar initOnMsg=function(isW){\n\t\tworker.onmessage=function(e){\n\t\t\tvar data=e; if(isW)data=e.data;\n\t\t\tvar ctx=openList[data.id];\n\t\t\tif(ctx){\n\t\t\t\tif(data.action==\"takeoff\"){\n\t\t\t\t\t//取走实时生成的amr数据\n\t\t\t\t\tctx.set.takeoffEncodeChunk(new Uint8Array(data.chunk.buffer));\n\t\t\t\t}else{\n\t\t\t\t\t//complete\n\t\t\t\t\tctx.call&&ctx.call(data);\n\t\t\t\t\tctx.call=null;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n\tvar initCtx=function(){\n\t\tvar ctx={worker:worker,set:setOrNull};\n\t\tif(setOrNull){\n\t\t\tctx.id=++openList.id;\n\t\t\topenList[ctx.id]=ctx;\n\t\t\t\n\t\t\tNormalizeSet(setOrNull);\n\t\t\tvar takeoff=!!setOrNull.takeoffEncodeChunk;\n\t\t\tif(takeoff){\n\t\t\t\tRecorder.CLog($T(\"Q7p7::takeoffEncodeChunk接管AMR编码器输出的二进制数据，只有首次回调数据（首帧）包含AMR头；在合并成AMR文件时，如果没有把首帧数据包含进去，则必须在文件开头添加上AMR头：Recorder.AMR.AMR_HEADER（转成二进制），否则无法播放\"),3);\n\t\t\t};\n\t\t\t\n\t\t\tworker.postMessage({\n\t\t\t\taction:\"init\"\n\t\t\t\t,id:ctx.id\n\t\t\t\t,sampleRate:setOrNull.sampleRate\n\t\t\t\t,bitRate:setOrNull.bitRate\n\t\t\t\t,takeoff:takeoff\n\t\t\t\t\n\t\t\t\t,x:new Int16Array(5)//低版本浏览器不支持序列化TypedArray\n\t\t\t});\n\t\t}else{\n\t\t\tworker.postMessage({\n\t\t\t\tx:new Int16Array(5)//低版本浏览器不支持序列化TypedArray\n\t\t\t});\n\t\t};\n\t\treturn ctx;\n\t};\n\tvar scope,worker=amrWorker;\n\t\n\t//非浏览器，不支持worker，或者开启失败，使用UI线程处理\n\tif(_badW || !HasWebWorker){\n\t\tRecorder.CLog($T(\"6o9Z::当前环境不支持Web Worker，amr实时编码器运行在主线程中\"),3);\n\t\tworker={ postMessage:function(ed){ run({data:ed}); } };\n\t\tscope={wkScope:{\n\t\t\twk_ctxs:{}, wk_AMR:Recorder.AMR\n\t\t}};\n\t\tinitOnMsg();\n\t\treturn initCtx();\n\t};\n\t\n\ttry{\n\t\tif(!worker){\n\t\t\t//创建一个新Worker\n\t\t\tvar onmsg=(run+\"\").replace(/[\\w\\$]+\\.onmessage/g,\"self.postMessage\");\n\t\t\tonmsg=onmsg.replace(/[\\w\\$]+\\.wkScope/g,\"wkScope\");\n\t\t\tvar jsCode=\");self.onmessage=\"+onmsg;\n\t\t\tjsCode+=\";var wkScope={ wk_ctxs:{},wk_AMR:Create() }\";\n\t\t\t\n\t\t\tvar engineCode=Recorder.AMR.Create.toString();\n\t\t\tvar url=(window.URL||webkitURL).createObjectURL(new Blob([\"var Create=(\",engineCode,jsCode], {type:\"text/javascript\"}));\n\t\t\t\n\t\t\tworker=new Worker(url);\n\t\t\tsetTimeout(function(){\n\t\t\t\t(window.URL||webkitURL).revokeObjectURL(url);//必须要释放，不然每次调用内存都明显泄露内存\n\t\t\t},10000);//chrome 83 file协议下如果直接释放，将会使WebWorker无法启动\n\t\t\tinitOnMsg(1);\n\t\t};\n\t\t\n\t\tvar ctx=initCtx(); ctx.isW=1;\n\t\tamrWorker=worker;\n\t\treturn ctx;\n\t}catch(e){//出错了就不要提供了\n\t\tworker&&worker.terminate();\n\t\tconsole.error(e);\n\t\treturn newContext(setOrNull, 1);//切换到UI线程处理\n\t};\n};\nRecorder.prototype.amr_stop=function(startCtx){\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"stop\"\n\t\t\t,id:startCtx.id\n\t\t});\n\t\tstartCtx.worker=null;\n\t\tdelete openList[startCtx.id];\n\t\t\n\t\t//疑似泄露检测 排除id\n\t\tvar opens=-1;\n\t\tfor(var k in openList){\n\t\t\topens++;\n\t\t};\n\t\tif(opens){\n\t\t\tRecorder.CLog($T(\"yYWs::amr worker剩{1}个未stop\",0,opens),3);\n\t\t};\n\t};\n};\nRecorder.prototype.amr_encode=function(startCtx,pcm){\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"encode\"\n\t\t\t,id:startCtx.id\n\t\t\t,pcm:pcm\n\t\t});\n\t};\n};\nRecorder.prototype.amr_complete=function(startCtx,True,False,autoStop){\n\tvar This=this;\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.call=function(data){\n\t\t\tif(autoStop){\n\t\t\t\tThis.amr_stop(startCtx);\n\t\t\t};\n\t\t\tif(data.err){\n\t\t\t\tFalse(data.err);\n\t\t\t}else{\n\t\t\t\tTrue(data.blob,\"audio/amr\");\n\t\t\t};\n\t\t};\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"complete\"\n\t\t\t,id:startCtx.id\n\t\t});\n\t}else{\n\t\tFalse($T(\"jOi8::amr编码器未start\"));\n\t};\n};\n\n\n}));"],
  "mappings": "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",
  "names": ["buf", "e", "ctx"]
}
