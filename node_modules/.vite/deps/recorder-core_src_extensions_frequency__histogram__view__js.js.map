{
  "version": 3,
  "sources": ["../../recorder-core/src/extensions/frequency.histogram.view.js"],
  "sourcesContent": ["/*\r\n录音 Recorder扩展，频率直方图显示\r\n使用本扩展需要引入src/extensions/lib.fft.js支持，直方图特意优化主要显示0-5khz语音部分（线性），其他高频显示区域较小，不适合用来展示音乐频谱，可通过配置fullFreq来恢复成完整的线性频谱，或自行修改源码修改成倍频程频谱（伯德图、对数频谱）；本可视化插件可以移植到其他语言环境，如需定制可联系作者\r\n\r\nhttps://github.com/xiangyuecn/Recorder\r\n\r\n本扩展核心算法主要参考了Java开源库jmp123 版本0.3 的代码：\r\nhttps://www.iteye.com/topic/851459\r\nhttps://sourceforge.net/projects/jmp123/files/\r\n*/\r\n(function(factory){\r\n\tvar browser=typeof window==\"object\" && !!window.document;\r\n\tvar win=browser?window:Object; //非浏览器环境，Recorder挂载在Object下面\r\n\tvar rec=win.Recorder,ni=rec.i18n;\r\n\tfactory(rec,ni,ni.$T,browser);\r\n}(function(Recorder,i18n,$T,isBrowser){\r\n\"use strict\";\r\n\r\nvar FrequencyHistogramView=function(set){\r\n\treturn new fn(set);\r\n};\r\nvar ViewTxt=\"FrequencyHistogramView\";\r\nvar fn=function(set){\r\n\tvar This=this;\r\n\tvar o={\r\n\t\t/*\r\n\t\telem:\"css selector\" //自动显示到dom，并以此dom大小为显示大小\r\n\t\t\t//或者配置显示大小，手动把frequencyObj.elem显示到别的地方\r\n\t\t,width:0 //显示宽度\r\n\t\t,height:0 //显示高度\r\n\t\t\r\nH5环境以上配置二选一\r\n\t\t\r\n\t\tcompatibleCanvas: CanvasObject //提供一个兼容H5的canvas对象，需支持getContext(\"2d\")，支持设置width、height，支持drawImage(canvas,...)\r\n\t\t,width:0 //canvas显示宽度\r\n\t\t,height:0 //canvas显示高度\r\n非H5环境使用以上配置\r\n\t\t*/\r\n\t\t\r\n\t\tscale:2 //缩放系数，应为正整数，使用2(3? no!)倍宽高进行绘制，避免移动端绘制模糊\r\n\t\t\r\n\t\t,fps:20 //绘制帧率，不可过高\r\n\t\t\r\n\t\t,lineCount:30 //直方图柱子数量，数量的多少对性能影响不大，密集运算集中在FFT算法中\r\n\t\t,widthRatio:0.6 //柱子线条宽度占比，为所有柱子占用整个视图宽度的比例，剩下的空白区域均匀插入柱子中间；默认值也基本相当于一根柱子占0.6，一根空白占0.4；设为1不留空白，当视图不足容下所有柱子时也不留空白\r\n\t\t,spaceWidth:0 //柱子间空白固定基础宽度，柱子宽度自适应，当不为0时widthRatio无效，当视图不足容下所有柱子时将不会留空白，允许为负数，让柱子发生重叠\r\n\t\t,minHeight:0 //柱子保留基础高度，position不为±1时应该保留点高度\r\n\t\t,position:-1 //绘制位置，取值-1到1，-1为最底下，0为中间，1为最顶上，小数为百分比\r\n\t\t,mirrorEnable:false //是否启用镜像，如果启用，视图宽度会分成左右两块，右边这块进行绘制，左边这块进行镜像（以中间这根柱子的中心进行镜像）\r\n\t\t\r\n\t\t,stripeEnable:true //是否启用柱子顶上的峰值小横条，position不是-1时应当关闭，否则会很丑\r\n\t\t,stripeHeight:3 //峰值小横条基础高度\r\n\t\t,stripeMargin:6 //峰值小横条和柱子保持的基础距离\r\n\t\t\r\n\t\t,fallDuration:1000 //柱子从最顶上下降到最底部最长时间ms\r\n\t\t,stripeFallDuration:3500 //峰值小横条从最顶上下降到底部最长时间ms\r\n\t\t\r\n\t\t//柱子颜色配置：[位置，css颜色，...] 位置: 取值0.0-1.0之间\r\n\t\t,linear:[0,\"rgba(0,187,17,1)\",0.5,\"rgba(255,215,0,1)\",1,\"rgba(255,102,0,1)\"]\r\n\t\t//峰值小横条渐变颜色配置，取值格式和linear一致，留空为柱子的渐变颜色\r\n\t\t,stripeLinear:null\r\n\t\t\r\n\t\t,shadowBlur:0 //柱子阴影基础大小，设为0不显示阴影，如果柱子数量太多时请勿开启，非常影响性能\r\n\t\t,shadowColor:\"#bbb\" //柱子阴影颜色\r\n\t\t,stripeShadowBlur:-1 //峰值小横条阴影基础大小，设为0不显示阴影，-1为柱子的大小，如果柱子数量太多时请勿开启，非常影响性能\r\n\t\t,stripeShadowColor:\"\" //峰值小横条阴影颜色，留空为柱子的阴影颜色\r\n\t\t\r\n\t\t,fullFreq:false //是否要绘制所有频率；默认false主要绘制5khz以下的频率，高频部分占比很少，此时不同的采样率对频谱显示几乎没有影响；设为true后不同采样率下显示的频谱是不一样的，因为 最大频率=采样率/2 会有差异\r\n\t\t//当发生绘制时会回调此方法，参数为当前绘制的频率数据和采样率，可实现多个直方图同时绘制，只消耗一个input输入和计算时间\r\n\t\t,onDraw:function(frequencyData,sampleRate){}\r\n\t};\r\n\tfor(var k in set){\r\n\t\to[k]=set[k];\r\n\t};\r\n\tThis.set=set=o;\r\n\t\r\n\tvar cCanvas=\"compatibleCanvas\";\r\n\tif(set[cCanvas]){\r\n\t\tvar canvas=This.canvas=set[cCanvas];\r\n\t}else{\r\n\t\tif(!isBrowser)throw new Error($T.G(\"NonBrowser-1\",[ViewTxt]));\r\n\t\tvar elem=set.elem;\r\n\t\tif(elem){\r\n\t\t\tif(typeof(elem)==\"string\"){\r\n\t\t\t\telem=document.querySelector(elem);\r\n\t\t\t}else if(elem.length){\r\n\t\t\t\telem=elem[0];\r\n\t\t\t};\r\n\t\t};\r\n\t\tif(elem){\r\n\t\t\tset.width=elem.offsetWidth;\r\n\t\t\tset.height=elem.offsetHeight;\r\n\t\t};\r\n\t\t\r\n\t\tvar thisElem=This.elem=document.createElement(\"div\");\r\n\t\tthisElem.style.fontSize=0;\r\n\t\tthisElem.innerHTML='<canvas style=\"width:100%;height:100%;\"/>';\r\n\t\t\r\n\t\tvar canvas=This.canvas=thisElem.querySelector(\"canvas\");\r\n\t\t\r\n\t\tif(elem){\r\n\t\t\telem.innerHTML=\"\";\r\n\t\t\telem.appendChild(thisElem);\r\n\t\t};\r\n\t};\r\n\tvar scale=set.scale;\r\n\tvar width=set.width*scale;\r\n\tvar height=set.height*scale;\r\n\tif(!width || !height){\r\n\t\tthrow new Error($T.G(\"IllegalArgs-1\",[ViewTxt+\" width=0 height=0\"]));\r\n\t};\r\n\t\r\n\tcanvas.width=width;\r\n\tcanvas.height=height;\r\n\tvar ctx=This.ctx=canvas.getContext(\"2d\");\r\n\t\r\n\tif(!Recorder.LibFFT){\r\n\t\tthrow new Error($T.G(\"NeedImport-2\",[ViewTxt,\"src/extensions/lib.fft.js\"]));\r\n\t};\r\n\tThis.fft=Recorder.LibFFT(1024);\r\n\t\r\n\t//柱子所在高度\r\n\tThis.lastH=[];\r\n\t//峰值小横条所在高度\r\n\tThis.stripesH=[];\r\n};\r\nfn.prototype=FrequencyHistogramView.prototype={\r\n\tgenLinear:function(ctx,colors,from,to){\r\n\t\tvar rtv=ctx.createLinearGradient(0,from,0,to);\r\n\t\tfor(var i=0;i<colors.length;){\r\n\t\t\trtv.addColorStop(colors[i++],colors[i++]);\r\n\t\t};\r\n\t\treturn rtv;\r\n\t}\r\n\t,input:function(pcmData,powerLevel,sampleRate){\r\n\t\tvar This=this;\r\n\t\tThis.sampleRate=sampleRate;\r\n\t\tThis.pcmData=pcmData;\r\n\t\tThis.pcmPos=0;\r\n\t\t\r\n\t\tThis.inputTime=Date.now();\r\n\t\tThis.schedule();\r\n\t}\r\n\t,schedule:function(){\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar interval=Math.floor(1000/set.fps);\r\n\t\tif(!This.timer){\r\n\t\t\tThis.timer=setInterval(function(){\r\n\t\t\t\tThis.schedule();\r\n\t\t\t},interval);\r\n\t\t};\r\n\t\t\r\n\t\tvar now=Date.now();\r\n\t\tvar drawTime=This.drawTime||0;\r\n\t\tif(now-This.inputTime>set.stripeFallDuration*1.3){\r\n\t\t\t//超时没有输入，顶部横条已全部落下，干掉定时器\r\n\t\t\tclearInterval(This.timer);\r\n\t\t\tThis.timer=0;\r\n\t\t\t\r\n\t\t\tThis.lastH=[];//重置高度再绘制一次，避免定时不准没到底就停了\r\n\t\t\tThis.stripesH=[];\r\n\t\t\tThis.draw(null,This.sampleRate);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tif(now-drawTime<interval){\r\n\t\t\t//没到间隔时间，不绘制\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tThis.drawTime=now;\r\n\t\t\r\n\t\t//调用FFT计算频率数据\r\n\t\tvar bufferSize=This.fft.bufferSize;\r\n\t\tvar pcm=This.pcmData;\r\n\t\tvar pos=This.pcmPos;\r\n\t\tvar arr=new Int16Array(bufferSize);\r\n\t\tfor(var i=0;i<bufferSize&&pos<pcm.length;i++,pos++){\r\n\t\t\tarr[i]=pcm[pos];\r\n\t\t};\r\n\t\tThis.pcmPos=pos;\r\n\t\t\r\n\t\tvar frequencyData=This.fft.transform(arr);\r\n\t\t\r\n\t\t//推入绘制\r\n\t\tThis.draw(frequencyData,This.sampleRate);\r\n\t}\r\n\t,draw:function(frequencyData,sampleRate){\r\n\t\tvar This=this,set=This.set;\r\n\t\tvar ctx=This.ctx;\r\n\t\tvar scale=set.scale;\r\n\t\tvar width=set.width*scale;\r\n\t\tvar height=set.height*scale;\r\n\t\tvar lineCount=set.lineCount;\r\n\t\tvar bufferSize=This.fft.bufferSize;\r\n\t\t\r\n\t\t\r\n\t\t//计算高度位置\r\n\t\tvar position=set.position;\r\n\t\tvar posAbs=Math.abs(set.position);\r\n\t\tvar originY=position==1?0:height;//y轴原点\r\n\t\tvar heightY=height;//最高的一边高度\r\n\t\tif(posAbs<1){\r\n\t\t\theightY=heightY/2;\r\n\t\t\toriginY=heightY;\r\n\t\t\theightY=Math.floor(heightY*(1+posAbs));\r\n\t\t\toriginY=Math.floor(position>0?originY*(1-posAbs):originY*(1+posAbs));\r\n\t\t};\r\n\t\t\r\n\t\tvar lastH=This.lastH;\r\n\t\tvar stripesH=This.stripesH;\r\n\t\tvar speed=Math.ceil(heightY/(set.fallDuration/(1000/set.fps)));\r\n\t\tvar stripeSpeed=Math.ceil(heightY/(set.stripeFallDuration/(1000/set.fps)));\r\n\t\tvar stripeMargin=set.stripeMargin*scale;\r\n\t\t\r\n\t\tvar Y0=1 << (Math.round(Math.log(bufferSize)/Math.log(2) + 3) << 1);\r\n\t\tvar logY0 = Math.log(Y0)/Math.log(10);\r\n\t\tvar dBmax=20*Math.log(0x7fff)/Math.log(10);\r\n\t\t\r\n\t\tvar fftSize=bufferSize/2,fftSize5k=fftSize;\r\n\t\tif(!set.fullFreq){//非绘制所有频率时，计算5khz所在位置，8000采样率及以下最高只有4khz\r\n\t\t\tfftSize5k=Math.min(fftSize,Math.floor(fftSize*5000/(sampleRate/2)));\r\n\t\t}\r\n\t\tvar isFullFreq=fftSize5k==fftSize;\r\n\t\tvar line80=isFullFreq?lineCount:Math.round(lineCount*0.8);//80%的柱子位置\r\n\t\tvar fftSizeStep1=fftSize5k/line80;\r\n\t\tvar fftSizeStep2=isFullFreq?0:(fftSize-fftSize5k)/(lineCount-line80);\r\n\t\tvar fftIdx=0;\r\n\t\tfor(var i=0;i<lineCount;i++){\r\n\t\t\t// !fullFreq 时不采用jmp123的非线性划分频段，录音语音并不适用于音乐的频率，应当弱化高频部分\r\n\t\t\t//80%关注0-5khz主要人声部分 20%关注剩下的高频，这样不管什么采样率都能做到大部分频率显示一致。\r\n\t\t\tvar start=Math.ceil(fftIdx);\r\n\t\t\tif(i<line80){\r\n\t\t\t\t//5khz以下\r\n\t\t\t\tfftIdx+=fftSizeStep1;\r\n\t\t\t}else{\r\n\t\t\t\t//5khz以上\r\n\t\t\t\tfftIdx+=fftSizeStep2;\r\n\t\t\t};\r\n\t\t\tvar end=Math.ceil(fftIdx); if(end==start)end++;\r\n\t\t\tend=Math.min(end,fftSize);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t//参考AudioGUI.java .drawHistogram方法\r\n\t\t\t\r\n\t\t\t//查找当前频段的最大\"幅值\"\r\n\t\t\tvar maxAmp=0;\r\n\t\t\tif(frequencyData){\r\n\t\t\t\tfor (var j=start; j<end; j++) {\r\n\t\t\t\t\tmaxAmp=Math.max(maxAmp,Math.abs(frequencyData[j]));\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t//计算音量\r\n\t\t\tvar dB= (maxAmp > Y0) ? Math.floor((Math.log(maxAmp)/Math.log(10) - logY0) * 17) : 0;\r\n\t\t\tvar h=heightY*Math.min(dB/dBmax,1);\r\n\t\t\t\r\n\t\t\t//使柱子匀速下降\r\n\t\t\tlastH[i]=(lastH[i]||0)-speed;\r\n\t\t\tif(h<lastH[i]){h=lastH[i];};\r\n\t\t\tif(h<0){h=0;};\r\n\t\t\tlastH[i]=h;\r\n\t\t\t\r\n\t\t\tvar shi=stripesH[i]||0;\r\n\t\t\tif(h&&h+stripeMargin>shi) {\r\n\t\t\t\tstripesH[i]=h+stripeMargin;\r\n\t\t\t}else{\r\n\t\t\t\t//使峰值小横条匀速度下落\r\n\t\t\t\tvar sh =shi-stripeSpeed;\r\n\t\t\t\tif(sh < 0){sh = 0;};\r\n\t\t\t\tstripesH[i] = sh;\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\t//开始绘制图形\r\n\t\tctx.clearRect(0,0,width,height);\r\n\t\t\r\n\t\tvar linear1=This.genLinear(ctx,set.linear,originY,originY-heightY);//上半部分的填充\r\n\t\tvar stripeLinear1=set.stripeLinear&&This.genLinear(ctx,set.stripeLinear,originY,originY-heightY)||linear1;//上半部分的峰值小横条填充\r\n\t\t\r\n\t\tvar linear2=This.genLinear(ctx,set.linear,originY,originY+heightY);//下半部分的填充\r\n\t\tvar stripeLinear2=set.stripeLinear&&This.genLinear(ctx,set.stripeLinear,originY,originY+heightY)||linear2;//上半部分的峰值小横条填充\r\n\t\t\r\n\t\t//计算柱子间距\r\n\t\tvar mirrorEnable=set.mirrorEnable;\r\n\t\tvar mirrorCount=mirrorEnable?lineCount*2-1:lineCount;//镜像柱子数量翻一倍-1根\r\n\t\t\r\n\t\tvar widthRatio=set.widthRatio;\r\n\t\tvar spaceWidth=set.spaceWidth*scale;\r\n\t\tif(spaceWidth!=0){\r\n\t\t\twidthRatio=(width-spaceWidth*(mirrorCount+1))/width;\r\n\t\t};\r\n\t\t\r\n\t\tfor(var i=0;i<2;i++){\r\n\t\t\tvar lineFloat=Math.max(1*scale,(width*widthRatio)/mirrorCount);//柱子宽度至少1个单位\r\n\t\t\tvar lineWN=Math.floor(lineFloat),lineWF=lineFloat-lineWN;//提取出小数部分\r\n\t\t\tvar spaceFloat=(width-mirrorCount*lineFloat)/(mirrorCount+1);//均匀间隔，首尾都留空，可能为负数，柱子将发生重叠\r\n\t\t\tif(spaceFloat>0 && spaceFloat<1){\r\n\t\t\t\twidthRatio=1; spaceFloat=0; //不够一个像素，丢弃不绘制间隔，重新计算\r\n\t\t\t}else break;\r\n\t\t};\r\n\t\t\r\n\t\t//绘制\r\n\t\tvar minHeight=set.minHeight*scale;\r\n\t\tvar XFloat=mirrorEnable?(width-lineWN)/2-spaceFloat:0;//镜像时，中间柱子位于正中心\r\n\t\tfor(var iMirror=0;iMirror<2;iMirror++){\r\n\t\t\tif(iMirror){ ctx.save(); ctx.scale(-1,1); }\r\n\t\t\tvar xMirror=iMirror?width:0; //绘制镜像部分，不用drawImage(canvas)进行镜像绘制，提升兼容性（iOS微信小程序bug https://developers.weixin.qq.com/community/develop/doc/000aaca2148dc8a235a0fb8c66b000）\r\n\t\t\t\r\n\t\t\t//绘制柱子\r\n\t\t\tctx.shadowBlur=set.shadowBlur*scale;\r\n\t\t\tctx.shadowColor=set.shadowColor;\r\n\t\t\tfor(var i=0,xFloat=XFloat,wFloat=0,x,y,w,h;i<lineCount;i++){\r\n\t\t\t\txFloat+=spaceFloat;\r\n\t\t\t\tx=Math.floor(xFloat)-xMirror;\r\n\t\t\t\tw=lineWN; wFloat+=lineWF; if(wFloat>=1){ w++; wFloat--; } //小数凑够1像素\r\n\t\t\t\th=Math.max(lastH[i],minHeight);\r\n\t\t\t\t\r\n\t\t\t\t//绘制上半部分\r\n\t\t\t\tif(originY!=0){\r\n\t\t\t\t\ty=originY-h;\r\n\t\t\t\t\tctx.fillStyle=linear1;\r\n\t\t\t\t\tctx.fillRect(x, y, w, h);\r\n\t\t\t\t};\r\n\t\t\t\t//绘制下半部分\r\n\t\t\t\tif(originY!=height){\r\n\t\t\t\t\tctx.fillStyle=linear2;\r\n\t\t\t\t\tctx.fillRect(x, originY, w, h);\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\txFloat+=w;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t//绘制柱子顶上峰值小横条\r\n\t\t\tif(set.stripeEnable){\r\n\t\t\t\tvar stripeShadowBlur=set.stripeShadowBlur;\r\n\t\t\t\tctx.shadowBlur=(stripeShadowBlur==-1?set.shadowBlur:stripeShadowBlur)*scale;\r\n\t\t\t\tctx.shadowColor=set.stripeShadowColor||set.shadowColor;\r\n\t\t\t\tvar stripeHeight=set.stripeHeight*scale;\r\n\t\t\t\tfor(var i=0,xFloat=XFloat,wFloat=0,x,y,w,h;i<lineCount;i++){\r\n\t\t\t\t\txFloat+=spaceFloat;\r\n\t\t\t\t\tx=Math.floor(xFloat)-xMirror;\r\n\t\t\t\t\tw=lineWN; wFloat+=lineWF; if(wFloat>=1){ w++; wFloat--; } //小数凑够1像素\r\n\t\t\t\t\th=stripesH[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\t//绘制上半部分\r\n\t\t\t\t\tif(originY!=0){\r\n\t\t\t\t\t\ty=originY-h-stripeHeight;\r\n\t\t\t\t\t\tif(y<0){y=0;};\r\n\t\t\t\t\t\tctx.fillStyle=stripeLinear1;\r\n\t\t\t\t\t\tctx.fillRect(x, y, w, stripeHeight);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t//绘制下半部分\r\n\t\t\t\t\tif(originY!=height){\r\n\t\t\t\t\t\ty=originY+h;\r\n\t\t\t\t\t\tif(y+stripeHeight>height){\r\n\t\t\t\t\t\t\ty=height-stripeHeight;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tctx.fillStyle=stripeLinear2;\r\n\t\t\t\t\t\tctx.fillRect(x, y, w, stripeHeight);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\txFloat+=w;\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\r\n\t\t\tif(iMirror){ ctx.restore(); }\r\n\t\t\tif(!mirrorEnable) break;\r\n\t\t};\r\n\t\t\r\n\t\tif(frequencyData){\r\n\t\t\tset.onDraw(frequencyData,sampleRate);\r\n\t\t};\r\n\t}\r\n};\r\nRecorder[ViewTxt]=FrequencyHistogramView;\r\n\r\n\t\r\n}));"],
  "mappings": "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",
  "names": []
}
